admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901
static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10000
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/c"
                route:
                  # host_rewrite: www.google.com
                  prefix_rewrite: "/coffee"
                  # cluster: service_google
                  cluster: coffee_service
              - match:
                  prefix: "/t"
                route:
                  # host_rewrite: www.google.com
                  prefix_rewrite: "/tea"
                  # cluster: service_google
                  cluster: tea_service
          http_filters:
          - name: envoy.filters.http.router
  - name: listener_1
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 10001
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/c"
                route:
                  # host_rewrite: www.google.com
                  prefix_rewrite: "/coffee"
                  # cluster: service_google
                  cluster: coffee_service
              - match:
                  prefix: "/t"
                route:
                  # host_rewrite: www.google.com
                  prefix_rewrite: "/tea"
                  # cluster: service_google
                  cluster: tea_service
          http_filters:
          - name: envoy.filters.http.router
      # support HTTPS listener
      tls_context:
        common_tls_context:
          tls_certificates:
            - certificate_chain:
                filename: "/etc/ssl/certs/https.crt"
              private_key:
                filename: "/etc/ssl/certs/key.pem"
  clusters:
  #- name: service_google
  - name: coffee_service
    # connect_timeout: 30s
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN # Load Balancing Policy
    load_assignment:
      # cluster_name: service_google
      cluster_name: coffee_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # address: www.google.com
                # port_value: 443
                address: coffeeapi # from docker compose, container name automatically converts to IP address
                port_value: 80
    ## THIS IS FOR HTTPS
    # transport_socket:
    #   name: envoy.transport_sockets.tls
    #   typed_config:
    #     "@type": type.googleapis.com/envoy.api.v2.auth.UpstreamTlsContext
    #     sni: www.google.com

  - name: tea_service
    # connect_timeout: 30s
    connect_timeout: 0.25s
    type: LOGICAL_DNS
    # Comment out the following line to test on v6 networks
    dns_lookup_family: V4_ONLY
    lb_policy: ROUND_ROBIN # Load Balancing Policy
    load_assignment:
      # cluster_name: service_google
      cluster_name: tea_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                # address: www.google.com
                # port_value: 443
                address: teaapi # from docker compose, container name automatically converts to IP address
                port_value: 80